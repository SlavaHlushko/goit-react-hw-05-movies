{"version":3,"file":"static/js/253.9548ad23.chunk.js","mappings":"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","sources":["components/FilmItem/FilmItem.styled.js","components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: darkblue;\n  font-weight: 500;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from './FilmItem.styled';\n\nexport const FilmItem = ({ filmId, name }) => {\n  const location = useLocation();\n  return (\n    <Link\n      to={`/movies/${filmId}`}\n      state={{\n        from: location,\n      }}\n    >\n      {name}\n    </Link>\n  );\n};\n\nFilmItem.propTypes = {\n  filmId: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 40%;\n  display: inline-block;\n  padding: 4px;\n`;\n","import { FilmItem } from '../FilmItem/FilmItem';\nimport PropTypes from 'prop-types';\nimport { List, Item } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  <List>\n    {films.map(({ id, original_title }) => {\n      return (\n        <Item key={id}>\n          <FilmItem filmId={id} name={original_title} />\n        </Item>\n      );\n    })}\n  </List>;\n};\n\nFilmList.PropTypes = {\n  films: PropTypes.array.isRequired,\n};\n\nexport default FilmList;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nexport const StyledForm = styled(Form)`\n  padding: 8px;\n  display: flex;\n  gap: 4px;\n`;\n\nexport const StyledField = styled(Field)`\n  font-size: 20px;\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { StyledForm, StyledField } from './SearchForm.styled';\n\nconst SearchForm = ({ onSearch }) => {\n  return (\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={({ query }, { resetForm }) => {\n        onSearch(query);\n        resetForm();\n      }}\n    >\n      <StyledForm>\n        <label>\n          <StyledField type=\"text\" name=\"query\"></StyledField>\n        </label>\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nSearchForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const QueryMessage = styled.p`\n  color: #9e0101;\n  font-size: 20px;\n  font-weight: 700;\n`;\n","import SearchForm from '../../components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport FilmList from '../../components/FilmList/FilmList';\nimport { getByQuery } from '../../services/movieAPI';\nimport { useSearchParams } from 'react-router-dom';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { Box } from '../../components/Box.styled';\nimport { QueryMessage } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSerachParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('idle');\n  const urlQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (urlQuery) {\n      setQuery(urlQuery);\n      return;\n    }\n    setQuery('');\n  }, [urlQuery]);\n\n  useEffect(() => {\n    if (query === '') {\n      setStatus('idle');\n      setFilms([]);\n      return;\n    }\n    setStatus('pending');\n    getByQuery(query)\n      .then(data => {\n        setFilms(data);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setStatus('done');\n      });\n  }, [query]);\n\n  const handleSearch = searchQuery => {\n    setSerachParams({ query: searchQuery });\n    setQuery(searchQuery);\n  };\n\n  return (\n    <Box pl=\"20px\">\n      <SearchForm onSearch={handleSearch} />\n      {films.length === 0 && status === 'done' ? (\n        <QueryMessage>There are no movies found for your query</QueryMessage>\n      ) : (\n        <FilmList films={films} />\n      )}\n      {status === 'pending' && <MagnifyingGlass />}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '68b942bb9ae0cb3e532a5c540add82e6';\nconst lang = 'en-US';\n\nexport const IMG_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport function getTrending() {\n  return axios.get(`trending/movie/day`).then(r => r.data.results);\n}\n\nexport function getByQuery(query) {\n  return axios.get(`search/movie?query=${query}`).then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios.get(`movie/${movieId}/credits/reviews`).then(r => r.data);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data.results);\n}\n"],"names":["Link","styled","NavLink","FilmItem","filmId","name","location","useLocation","to","state","from","Item","FilmList","films","map","id","original_title","PropTypes","StyledForm","Form","StyledField","Field","onSearch","initialValues","query","onSubmit","resetForm","type","QueryMessage","useSearchParams","searchParams","setSerachParams","useState","setFilms","setQuery","status","setStatus","urlQuery","get","useEffect","getByQuery","then","data","catch","error","console","log","finally","pl","searchQuery","length","IMG_URL","getTrending","axios","r","results","getMovieCredits","movieId","getMovieReviews","api_key","language"],"sourceRoot":""}