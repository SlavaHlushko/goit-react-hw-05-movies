{"version":3,"file":"static/js/99.3c665d24.chunk.js","mappings":"0OAEaA,E,QAAcC,GAAAA,IAAH,+H,SCGXC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC5BJ,EAAWI,EACZ,GACF,GAAE,CAACR,IACmB,IAAnBG,EAAQM,QACH,qEAGP,SAACZ,EAAD,UACGM,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BACE,oCACA,uBAAID,QAEN,uBAAIC,MALGF,EAQZ,KAGN,C,sKCzBYG,EAAU,uDAQhB,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,sBAAgCT,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,GAC9C,CAEM,SAASC,EAAWC,GACzB,OAAOJ,EAAAA,EAAAA,IAAA,6BAAgCI,IAASb,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,GACvD,CAMM,SAASG,EAAgBrB,GAC9B,OAAOgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,qBAA8CO,MAAK,SAAAU,GAAC,OAAIA,EAAET,IAAN,GAC5D,CAEM,SAASF,EAAgBN,GAC9B,OAAOgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,aAAsCO,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,GACpD,CAxBDF,EAAAA,EAAAA,SAAAA,QANiB,gCAOjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBM,IAPc,mCAQdC,SAPW,Q","sources":["components/Review/Review.styled.js","components/Review/Review.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.div`\n  list-style-type: none;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/movieAPI';\nimport { ReviewsList } from './Review.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    getMovieReviews(movieId).then(data => {\n      setReviews(data);\n    });\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for yhis movie</p>;\n  }\n  return (\n    <ReviewsList>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>\n              <b>Author:</b>\n              <b>{author}</b>\n            </p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '68b942bb9ae0cb3e532a5c540add82e6';\nconst lang = 'en-US';\n\nexport const IMG_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  language: lang,\n};\n\nexport function getTrending() {\n  return axios.get(`trending/movie/day`).then(r => r.data.results);\n}\n\nexport function getByQuery(query) {\n  return axios.get(`search/movie?query=${query}`).then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios.get(`movie/${movieId}/credits/reviews`).then(r => r.data);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data.results);\n}\n"],"names":["ReviewsList","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","data","length","map","id","author","content","IMG_URL","getTrending","axios","r","results","getByQuery","query","getMovieCredits","key","language"],"sourceRoot":""}