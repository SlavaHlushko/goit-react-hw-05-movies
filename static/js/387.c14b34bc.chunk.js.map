{"version":3,"file":"static/js/387.c14b34bc.chunk.js","mappings":"wPAEaA,EAAWC,EAAAA,GAAAA,IAAH,wHAORC,EAAWD,EAAAA,GAAAA,GAAH,4DAGRE,EAAYF,EAAAA,GAAAA,IAAH,wCAITG,EAAgBH,EAAAA,GAAAA,KAAH,gE,SCXbI,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC5BJ,EAAQI,EAAML,KACf,GACF,GAAE,CAACH,KAEF,SAACN,EAAD,UACGS,EAAKM,KAAI,YAAgE,IAA7DC,EAA4D,EAA5DA,aAAcC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACzD,OACE,UAAClB,EAAD,WACGc,GACC,SAACb,EAAD,CAAWkB,IAAKC,EAAAA,GAAUN,EAAcO,IAAKN,EAAMO,MAAM,SAEzD,SAACrB,EAAD,CACEkB,IAAI,yHACJE,IAAKN,EACLO,MAAM,SAIV,uBAAIN,KACJ,0BACE,SAACd,EAAD,2BACA,0BAAOe,SAdIC,EAkBlB,KAGN,C,sKCjCYE,EAAU,uDAQhB,SAASG,EAAYC,GAC1B,OAAOC,EAAAA,EAAAA,IAAA,yBAA4BD,IAAUb,MAAK,SAAAe,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACpD,CAEM,SAASC,EAAWC,GACzB,OAAOL,EAAAA,EAAAA,IAAA,6BAAgCK,IAASnB,MAAK,SAAAe,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACvD,CAMM,SAASlB,EAAgBN,GAC9B,OAAOqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,qBAA8CO,MAAK,SAAAe,GAAC,OAAIA,EAAEC,IAAN,GAC5D,CAEM,SAASI,EAAgB3B,GAC9B,OAAOqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,aAAsCO,MAAK,SAAAe,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACpD,CAxBDH,EAAAA,EAAAA,SAAAA,QANiB,gCAOjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBO,QAPc,mCAQdC,SAPW,Q","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.div`\n  list-style-type: none;\n  padding: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const CastItem = styled.li`\n  width: calc((100% - 140px) / 8);\n`;\nexport const CastImage = styled.img`\n  width: 100%;\n`;\n\nexport const CharacterSpan = styled.span`\n  display: block;\n  font-weight: 700;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits, IMG_URL } from '../../services/movieAPI';\nimport { CastList, CastItem, CastImage, CharacterSpan } from './Cast.styled';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(movie => {\n      setCast(movie.cast);\n    });\n  }, [movieId]);\n  return (\n    <CastList>\n      {cast.map(({ profile_path, name, original_name, character, cast_id }) => {\n        return (\n          <CastItem key={cast_id}>\n            {profile_path ? (\n              <CastImage src={IMG_URL + profile_path} alt={name} width=\"150\" />\n            ) : (\n              <CastImage\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\n                alt={name}\n                width=\"200\"\n              />\n            )}\n\n            <p>{original_name}</p>\n            <p>\n              <CharacterSpan>Character: </CharacterSpan>\n              <span>{character}</span>\n            </p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '68b942bb9ae0cb3e532a5c540add82e6';\nconst lang = 'en-US';\n\nexport const IMG_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport function getTrending(period) {\n  return axios.get(`trending/movie/${period}`).then(r => r.data.results);\n}\n\nexport function getByQuery(query) {\n  return axios.get(`search/movie?query=${query}`).then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios.get(`movie/${movieId}/credits/reviews`).then(r => r.data);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios.get(`movie/${movieId}/reviews`).then(r => r.data.results);\n}\n"],"names":["CastList","styled","CastItem","CastImage","CharacterSpan","Cast","movieId","useParams","useState","cast","setCast","useEffect","getMovieCredits","then","movie","map","profile_path","name","original_name","character","cast_id","src","IMG_URL","alt","width","getTrending","period","axios","r","data","results","getByQuery","query","getMovieReviews","api_key","language"],"sourceRoot":""}