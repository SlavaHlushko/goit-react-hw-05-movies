{"version":3,"file":"static/js/145.4368c84a.chunk.js","mappings":"iNAEaA,EAAOC,EAAAA,GAAAA,GAAH,0HAQJC,EAAOD,EAAAA,GAAAA,GAAH,kF,SCNJE,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFMD,EADD,KASjB,C,qICID,EAnBmB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACpB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,IAETF,SAAU,cAA+B,IAA5BE,EAA2B,EAA3BA,MAAWC,EAAgB,EAAhBA,UACtBH,EAASE,GACTC,GACD,EAPH,UASE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAIP,EC+BD,EA5Ce,WACb,OAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAeoB,EAAf,KACMC,EAAaL,EAAaM,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WAENJ,EADEE,GAIK,GACV,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,KAAVZ,GAIJa,EAAAA,EAAAA,IAAWb,GACRc,MAAK,SAAAC,GACJN,EAAUM,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPZR,EAAU,GAQb,GAAE,CAACT,IAOJ,OACE,6BACE,gDACA,SAAC,EAAD,CAAYF,SARK,SAAAsB,GACnBd,EAAgB,CAAEN,MAAOoB,IACzBZ,EAASY,EACV,IAMsB,IAAlB/B,EAAOgC,QAAgBX,GACtB,yDAEA,SAACtB,EAAA,EAAD,CAAUC,OAAQA,MAIzB,C","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 40%;\n  display: inline-block;\n  padding: 4px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './FilmList.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nFilmList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { Formik, Field, Form } from 'formik';\nimport PropTypes from 'prop-types';\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={({ query }, { resetForm }) => {\n        onSubmit(query);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Field type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SearchForm;\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { getByQuery } from '../../services/movieAPI';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FilmList } from '../../components/FilmList/FilmList';\nimport SearchForm from '../../components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const queryInput = searchParams.get('query');\n\n  useEffect(() => {\n    if (queryInput) {\n      setQuery(queryInput);\n      return;\n    }\n    setQuery('');\n  }, [queryInput]);\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies([]);\n      return;\n    }\n    getByQuery(query)\n      .then(data => {\n        setMovies(data);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n    setQuery(searchQuery);\n  };\n\n  return (\n    <main>\n      <h2>Movies search page</h2>\n      <SearchForm onSubmit={handleSubmit} />\n      {movies.length === 0 && queryInput ? (\n        <p>Sorry, there is no any movie</p>\n      ) : (\n        <FilmList movies={movies} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","FilmList","movies","location","useLocation","map","id","title","to","state","from","onSubmit","initialValues","query","resetForm","type","name","useSearchParams","searchParams","setSearchParams","useState","setQuery","setMovies","queryInput","get","useEffect","getByQuery","then","data","catch","error","console","log","searchQuery","length"],"sourceRoot":""}